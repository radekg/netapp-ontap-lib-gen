from netapp.connection import NaConnection
from audit_format import AuditFormat # 0 properties
from fileservice_audit_config import FileserviceAuditConfig # 13 properties
from fileservice_audit_config_get_iter_key_td import FileserviceAuditConfigGetIterKeyTd # 1 properties
from psize import Psize # 0 properties

class FileserviceAuditConnection(NaConnection):
    
    def fileservice_audit_enable(self, force=None):
        """
        Enable Auditing for specified Vserver
        
        :param force: Force Enable
        """
        return self.request( "fileservice-audit-enable", {
            'force': [ force, 'force', [ bool, 'None' ], False ],
        }, {
        } )
    
    def fileservice_audit_config_get_iter(self, max_records=None, query=None, tag=None, desired_attributes=None):
        """
        Show Audit configuration details for all Vservers
        
        :param max_records: The maximum number of records to return in this call.
                Default: 20
        
        :param query: A query that specifies which objects to return.
                A query could be specified on any number of attributes in the
                fileservice-audit-config object.
                All fileservice-audit-config objects matching this query up to
                'max-records' will be returned.
        
        :param tag: Specify the tag from the last call.
                It is usually not specified for the first call. For subsequent
                calls, copy values from the 'next-tag' obtained from the previous
                call.
        
        :param desired_attributes: Specify the attributes that should be returned.
                If not present, all attributes for which information is available
                will be returned.
                If present, only the desired attributes for which information is
                available will be returned.
        """
        return self.request( "fileservice-audit-config-get-iter", {
            'max_records': max_records,
            'query': [ query, 'query', [ FileserviceAuditConfig, 'None' ], False ],
            'tag': tag,
            'desired_attributes': [ desired_attributes, 'desired-attributes', [ FileserviceAuditConfig, 'None' ], False ],
        }, {
            'attributes-list': [ FileserviceAuditConfig, True ],
        } )
    
    def fileservice_audit_remove(self, force=None):
        """
        Disable Audit Configuration for specified vserver
        
        :param force: Force Delete
        """
        return self.request( "fileservice-audit-remove", {
            'force': [ force, 'force', [ bool, 'None' ], False ],
        }, {
        } )
    
    def fileservice_audit_config_modify(self, rotate_limit=None, rotate_size=None, format=None, destination=None, rotate_schedule_minute=None, rotate_schedule_month=None, audit_guarantee=None, rotate_schedule_dayofweek=None, rotate_schedule_day=None, rotate_schedule_hour=None):
        """
        Modify audit configuration for a Vserver
        
        :param rotate_limit: Audit log files rotation Limit. A value of 0 indicates that all
                the files will be retained. Default: 0
        
        :param rotate_size: Audit log file size limit. By default rotation is done based on
                size. This field is mutually exclusive with time related rotate
                fields. If time based rotation is needed use the time based
                rotation fields(rotate-schedule-month, rotate-schedule-dayofweek,
                rotate-schedule-day... etc). Default: 100MB
        
        :param format: The format in which the logs would be generated by consolidation
                process. Default: evtx
                Possible values:
                <ul>
                <li> "xml"  - Data ONTAP-Specific XML Log Format,
                <li> "evtx" - Microsoft Windows EVTX Log Format
                </ul>
        
        :param destination: Audit log destination path. The path where consolidated audit
                logs are stored. If the path is not valid, the api returns error
        
        :param rotate_schedule_minute: Audit Log rotation schedule: Minute. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        
        :param rotate_schedule_month: Audit log rotation schedule: Month. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        
        :param audit_guarantee: Strict guarantee of auditing for a Vserver. If this is true, file
                access is denied if audit record can not be generated and if this
                is false, auditing is done on a best effort basis. Default: true
        
        :param rotate_schedule_dayofweek: Audit log rotation schedule: Day of Week. By Default rotation is
                done based on size. This field is mutually exclusive with
                rotate-size. Do not use this field along with rotate-size field
        
        :param rotate_schedule_day: Audit log rotation schedule: Day. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        
        :param rotate_schedule_hour: Audit log rotation schedule: Hour. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        """
        return self.request( "fileservice-audit-config-modify", {
            'rotate_limit': [ rotate_limit, 'rotate-limit', [ int, 'None' ], False ],
            'rotate_size': [ rotate_size, 'rotate-size', [ int, 'psize' ], False ],
            'format': [ format, 'format', [ basestring, 'audit-format' ], False ],
            'destination': [ destination, 'destination', [ basestring, 'None' ], False ],
            'rotate_schedule_minute': [ rotate_schedule_minute, 'rotate-schedule-minute', [ int, 'cron-minute' ], True ],
            'rotate_schedule_month': [ rotate_schedule_month, 'rotate-schedule-month', [ int, 'cron-month' ], True ],
            'audit_guarantee': [ audit_guarantee, 'audit-guarantee', [ bool, 'None' ], False ],
            'rotate_schedule_dayofweek': [ rotate_schedule_dayofweek, 'rotate-schedule-dayofweek', [ int, 'cron-day-of-week' ], True ],
            'rotate_schedule_day': [ rotate_schedule_day, 'rotate-schedule-day', [ int, 'cron-day-of-month' ], True ],
            'rotate_schedule_hour': [ rotate_schedule_hour, 'rotate-schedule-hour', [ int, 'cron-hour' ], True ],
        }, {
        } )
    
    def fileservice_audit_config_get(self, desired_attributes=None):
        """
        Show Audit configuration details for a Vserver
        
        :param desired_attributes: Specify the attributes that should be returned.
                If not present, all attributes for which information is available
                will be returned.
                If present, only the desired attributes for which information is
                available will be returned.
        """
        return self.request( "fileservice-audit-config-get", {
            'desired_attributes': [ desired_attributes, 'desired-attributes', [ FileserviceAuditConfig, 'None' ], False ],
        }, {
            'attributes': [ FileserviceAuditConfig, False ],
        } )
    
    def fileservice_audit_rotate_log(self):
        """
        Rotate audit log for specified vserver
        """
        return self.request( "fileservice-audit-rotate-log", {
        }, {
        } )
    
    def fileservice_audit_config_create(self, destination, rotate_limit=None, rotate_size=None, format=None, rotate_schedule_minute=None, return_record=None, rotate_schedule_month=None, rotate_schedule_dayofweek=None, rotate_schedule_day=None, rotate_schedule_hour=None):
        """
        Create audit configuration for a Vserver
        
        :param destination: Audit log destination path. The path where consolidated audit
                logs are stored. If the path is not valid, the api returns error
        
        :param rotate_limit: Audit log files rotation Limit. A value of 0 indicates that all
                the files will be retained. Default: 0
        
        :param rotate_size: Audit log file size limit. By default rotation is done based on
                size. This field is mutually exclusive with time related rotate
                fields. If time based rotation is needed use the time based
                rotation fields(rotate-schedule-month, rotate-schedule-dayofweek,
                rotate-schedule-day... etc). Default: 100MB
        
        :param format: The format in which the logs would be generated by consolidation
                process. Default: evtx
                Possible values:
                <ul>
                <li> "xml"  - Data ONTAP-Specific XML Log Format,
                <li> "evtx" - Microsoft Windows EVTX Log Format
                </ul>
        
        :param rotate_schedule_minute: Audit Log rotation schedule: Minute. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        
        :param return_record: If set to true, returns the fileservice-audit-config on
                successful creation.
                Default: false
        
        :param rotate_schedule_month: Audit log rotation schedule: Month. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        
        :param rotate_schedule_dayofweek: Audit log rotation schedule: Day of Week. By Default rotation is
                done based on size. This field is mutually exclusive with
                rotate-size. Do not use this field along with rotate-size field
        
        :param rotate_schedule_day: Audit log rotation schedule: Day. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        
        :param rotate_schedule_hour: Audit log rotation schedule: Hour. By Default rotation is done
                based on size. This field is mutually exclusive with rotate-size.
                Do not use this field along with rotate-size field
        """
        return self.request( "fileservice-audit-config-create", {
            'rotate_limit': [ rotate_limit, 'rotate-limit', [ int, 'None' ], False ],
            'rotate_size': [ rotate_size, 'rotate-size', [ int, 'psize' ], False ],
            'format': [ format, 'format', [ basestring, 'audit-format' ], False ],
            'destination': [ destination, 'destination', [ basestring, 'None' ], False ],
            'rotate_schedule_minute': [ rotate_schedule_minute, 'rotate-schedule-minute', [ int, 'cron-minute' ], True ],
            'return_record': [ return_record, 'return-record', [ bool, 'None' ], False ],
            'rotate_schedule_month': [ rotate_schedule_month, 'rotate-schedule-month', [ int, 'cron-month' ], True ],
            'rotate_schedule_dayofweek': [ rotate_schedule_dayofweek, 'rotate-schedule-dayofweek', [ int, 'cron-day-of-week' ], True ],
            'rotate_schedule_day': [ rotate_schedule_day, 'rotate-schedule-day', [ int, 'cron-day-of-month' ], True ],
            'rotate_schedule_hour': [ rotate_schedule_hour, 'rotate-schedule-hour', [ int, 'cron-hour' ], True ],
        }, {
            'result': [ FileserviceAuditConfig, False ],
        } )
    
    def fileservice_audit_disable(self):
        """
        Disable Auditing for specified Vserver
        """
        return self.request( "fileservice-audit-disable", {
        }, {
        } )
    
    def fileservice_audit_config_get_total_records(self):
        """
        Return the total number of records
        """
        return self.request( "fileservice-audit-config-get-total-records", {
        }, {
            'count': [ int, False ],
        } )
